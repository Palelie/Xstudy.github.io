(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{1186:function(t,s,a){t.exports=a.p+"assets/img/9170275ee28006233c86558fd074c57.630d280e.jpg"},1766:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"面向对象-进阶"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面向对象-进阶"}},[t._v("#")]),t._v(" 面向对象（进阶）")]),t._v(" "),n("h2",{attrs:{id:"一、final"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、final"}},[t._v("#")]),t._v(" 一、final")]),t._v(" "),n("h4",{attrs:{id:"_1、作用-总结一句话-final修饰的不能进行修改"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、作用-总结一句话-final修饰的不能进行修改"}},[t._v("#")]),t._v(" 1、作用：（总结一句话，final修饰的不能进行修改）")]),t._v(" "),n("ul",[n("li",[t._v("给"),n("strong",[t._v("类")]),t._v("加上final关键字后，该类将无法再被"),n("strong",[t._v("继承")])]),t._v(" "),n("li",[t._v("给"),n("strong",[t._v("方法")]),t._v("加上final关键字后，该方法无法再被"),n("strong",[t._v("覆盖（重写）")])]),t._v(" "),n("li",[t._v("给"),n("strong",[t._v("局部变量")]),t._v("加上final关键字后，该变量一旦赋值就不能再赋值了（只能赋值一次）")]),t._v(" "),n("li",[t._v("若变量为"),n("strong",[t._v("引用")]),t._v("，当该引用指向一个对象后，永远只能指向该对象，也不能指向null(该对象不会被垃圾回收器回收，直到当前方法结束才会释放空间)。注意，final修饰的引用指向的对象内部数据修改不受影响（数组、String等）")]),t._v(" "),n("li",[t._v("给"),n("strong",[t._v("实例变量")]),t._v("加上final后，系统不再赋默认值，要求程序员"),n("strong",[t._v("手动赋值")]),t._v("（可以在变量后面直接"),n("strong",[t._v("加等号")]),t._v("赋值，也可以通过"),n("strong",[t._v("构造函数")]),t._v("赋值）")])]),t._v(" "),n("p",[n("strong",[t._v("2、用法")]),t._v("："),n("code",[t._v("public final class String{}")]),t._v("、"),n("code",[t._v("public final void add(){}")]),t._v("、"),n("code",[t._v("（private） final int i")]),t._v("、"),n("code",[t._v("final People p")])]),t._v(" "),n("h4",{attrs:{id:"_3、注意"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、注意"}},[t._v("#")]),t._v(" 3、注意：")]),t._v(" "),n("p",[t._v("如果要用final修饰实例变量，绝大部分情况都要和"),n("strong",[t._v("static")]),t._v("搭配使用。")]),t._v(" "),n("p",[n("strong",[t._v("原因")]),t._v("：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("final")]),t._v("修饰的变量永远只能取固定值，每new一个对象都要在"),n("strong",[t._v("堆内存")]),t._v("给他分配空间，会造成"),n("strong",[t._v("空间浪费")]),t._v("。所以用static修饰，只存放一个在"),n("strong",[t._v("方法区")]),t._v("中")]),t._v(" "),n("li",[n("strong",[t._v("static")]),t._v("修饰的变量是"),n("strong",[t._v("可以被修改")]),t._v('的，用final修饰后才是真正意义上的"'),n("strong",[t._v("常量")]),t._v('"')])]),t._v(" "),n("p",[t._v("即"),n("code",[t._v("static final int i")]),t._v("，用"),n("code",[t._v("static final")]),t._v('修饰的变量称为"'),n("strong",[t._v("常量")]),t._v('"。')]),t._v(" "),n("h2",{attrs:{id:"二、抽象类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、抽象类"}},[t._v("#")]),t._v(" 二、抽象类")]),t._v(" "),n("h4",{attrs:{id:"概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" "),n("strong",[t._v("概念")]),t._v("：")]),t._v(" "),n("p",[t._v("抽象类是将类与类之间的"),n("strong",[t._v("共同特征")]),t._v("提取出来形成的类。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(1186),alt:"9170275ee28006233c86558fd074c57"}})]),t._v(" "),n("h4",{attrs:{id:"语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法：")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("修饰符列表"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" 类名"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t类体"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("h4",{attrs:{id:"特征"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特征"}},[t._v("#")]),t._v(" 特征：")]),t._v(" "),n("ol",[n("li",[t._v("抽象类也属于"),n("strong",[t._v("引用数据类型")])]),t._v(" "),n("li",[t._v("由于类本身是不存在的，所以抽象类"),n("strong",[t._v("无法创建对象")]),t._v("（实例化）,是用来被子类继承的")]),t._v(" "),n("li",[t._v("抽象类的"),n("strong",[t._v("子类")]),t._v("可以是抽象类")]),t._v(" "),n("li",[t._v("抽象类虽然无法实例化，但是抽象类"),n("strong",[t._v("有构造方法")]),t._v("，这个方法是供子类使用的")])]),t._v(" "),n("h2",{attrs:{id:"三、抽象方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、抽象方法"}},[t._v("#")]),t._v(" 三、抽象方法")]),t._v(" "),n("h4",{attrs:{id:"概念-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概念-2"}},[t._v("#")]),t._v(" 概念：")]),t._v(" "),n("p",[t._v("抽象方法表示没有实现的方法，即"),n("strong",[t._v("没有方法体")]),t._v("的方法")]),t._v(" "),n("h4",{attrs:{id:"语法-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语法-2"}},[t._v("#")]),t._v(" 语法：")]),t._v(" "),n("p",[n("code",[t._v("public abstract void doSome();")]),t._v("(可以有形参)")]),t._v(" "),n("h4",{attrs:{id:"特征-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特征-2"}},[t._v("#")]),t._v(" 特征：")]),t._v(" "),n("ol",[n("li",[t._v("没有方法体，以"),n("strong",[t._v("分号结尾")])]),t._v(" "),n("li",[t._v("前面修饰符列表中有"),n("strong",[t._v("abstract")]),t._v("关键字")]),t._v(" "),n("li",[t._v("抽象类中不一定有抽象方法，但抽象方法一定在抽象类中")]),t._v(" "),n("li",[t._v("一个非抽象的类继承抽象类，必须将抽象类中的抽象方法实现（重写/覆盖）")])]),t._v(" "),n("h2",{attrs:{id:"四、接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、接口"}},[t._v("#")]),t._v(" 四、接口")]),t._v(" "),n("h4",{attrs:{id:"特征-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特征-3"}},[t._v("#")]),t._v(" 特征：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v('接口也是一种"'),n("strong",[t._v("引用数据类型")]),t._v('"')])]),t._v(" "),n("li",[n("p",[t._v("编译之后也生成一个"),n("strong",[t._v("class字节码文件")])])]),t._v(" "),n("li",[n("p",[t._v("接口是"),n("strong",[t._v("完全抽象")]),t._v("的（抽象类是半抽象的）,或者也可以说接口是"),n("strong",[t._v("特殊的抽象类")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("接口与接口")]),t._v("/"),n("strong",[t._v("接口与类")]),t._v("之间支持"),n("strong",[t._v("多继承")]),t._v("，一个接口可以继承多个接口，弥补了类与类之间只能单继承的缺陷")])]),t._v(" "),n("li",[n("p",[t._v("接口"),n("strong",[t._v("多继承")]),t._v("并实现"),n("strong",[t._v("多态")]),t._v("情况下，若要调用其他接口的方法，需要"),n("strong",[t._v("向下转型")]),t._v("，即需要"),n("strong",[t._v("强制转换")])])]),t._v(" "),n("li",[n("p",[t._v("接口中只有两样东西："),n("strong",[t._v("常量")]),t._v("、"),n("strong",[t._v("抽象方法")]),t._v("（不能有方法体，{}也不行，要分号结尾）")])]),t._v(" "),n("li",[n("p",[t._v("接口中所有的元素都是"),n("strong",[t._v("公开")]),t._v("的（public修饰）")])]),t._v(" "),n("li",[n("p",[t._v("接口中的"),n("strong",[t._v("抽象方法")]),t._v("定义时，"),n("code",[t._v("public abstract")]),t._v("修饰符"),n("strong",[t._v("可以省略")])])]),t._v(" "),n("li",[n("p",[t._v("接口中的"),n("strong",[t._v("常量")]),t._v("定义时，"),n("code",[t._v("public static final")]),t._v("修饰符"),n("strong",[t._v("可以省略")])])]),t._v(" "),n("li",[n("p",[t._v("若一个类既要继承类，又要实现接口，应该"),n("strong",[t._v("先写extends再写implements")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("类若强制转换成接口，不需要有继承关系也能进行转换（但需要进行实现）")])]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Eat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Eat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//猫类实现了接口，但没有继承该接口")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此处要设")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Animal")]),t._v(" animal "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("animal "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Eat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以用instanceof判断是否实现了该接口")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Eat")]),t._v(" e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Eat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("animal"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以直接从父类强制转换为子类实现的接口类型")]),t._v("\n            e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br")])])])]),t._v(" "),n("h4",{attrs:{id:"语法-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语法-3"}},[t._v("#")]),t._v(" 语法：")]),t._v(" "),n("p",[n("code",[t._v("[修饰符列表] interface 接口名{}")])]),t._v(" "),n("h4",{attrs:{id:"注意"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意：")]),t._v(" "),n("p",[n("strong",[t._v("类和类")]),t._v("之间叫做 "),n("strong",[t._v('"继承"')]),t._v(" ， "),n("strong",[t._v("类和接口")]),t._v(" 之间叫做 "),n("strong",[t._v('"实现"')]),t._v(" （依然可以看作是继承）")]),t._v(" "),n("h4",{attrs:{id:"implements关键字"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#implements关键字"}},[t._v("#")]),t._v(" implements关键字：")]),t._v(" "),n("p",[t._v('类"实现"（继承）接口不用extends，而是用implements')]),t._v(" "),n("h4",{attrs:{id:"抽象类与接口的区别-语法上"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#抽象类与接口的区别-语法上"}},[t._v("#")]),t._v(" 抽象类与接口的区别（语法上）：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("继承")]),t._v("抽象类用"),n("strong",[t._v("extends")]),t._v("；"),n("strong",[t._v("实现")]),t._v("接口用"),n("strong",[t._v("implements")])]),t._v(" "),n("li",[t._v("抽象类是"),n("strong",[t._v("半抽象")]),t._v("的；接口是"),n("strong",[t._v("完全抽象")]),t._v("的")]),t._v(" "),n("li",[t._v("抽象类中"),n("strong",[t._v("有构造方法")]),t._v("；接口中"),n("strong",[t._v("没有构造方法")])]),t._v(" "),n("li",[t._v("抽象类只能"),n("strong",[t._v("单继承")]),t._v("；接口可以"),n("strong",[t._v("多继承")])]),t._v(" "),n("li",[t._v("抽象类"),n("strong",[t._v("不一定")]),t._v("有抽象方法；接口只有"),n("strong",[t._v("抽象方法")]),t._v("和"),n("strong",[t._v("常量")])])]),t._v(" "),n("h2",{attrs:{id:"四、访问控制权限"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、访问控制权限"}},[t._v("#")]),t._v(" 四、访问控制权限")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("访问控制权限")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("本类")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("同包")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("子类")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("任意位置")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("public")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("可以")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("可以")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("可以")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("可以")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("protected")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("可以")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("可以")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("可以")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("不行")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("默认")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("可以")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("可以")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("不行")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("不行")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("private")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("可以")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("不行")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("不行")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("不行")])])])]),t._v(" "),n("h2",{attrs:{id:"五、object类中常用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五、object类中常用方法"}},[t._v("#")]),t._v(" 五、Object类中常用方法")]),t._v(" "),n("h4",{attrs:{id:"_1-protected-object-clone-负责对象的克隆"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-protected-object-clone-负责对象的克隆"}},[t._v("#")]),t._v(" 1. protected Object  clone()\t\t\t\t\t负责对象的克隆")]),t._v(" "),n("h4",{attrs:{id:"_2-public-native-int-hashcode-获取对象哈希值的一个方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-public-native-int-hashcode-获取对象哈希值的一个方法"}},[t._v("#")]),t._v(" 2. public native int hashCode()              获取对象哈希值的一个方法")]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("该方法不是抽象方法，带有native关键字，底层直接调用C++程序")]),t._v(" "),n("li",[t._v("返回值其实是一个经过哈希算法求出的java对象内存地址哈希值")])])]),t._v(" "),n("h4",{attrs:{id:"_3-boolean-equals-object-obj-判断两个对象是否相等"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-boolean-equals-object-obj-判断两个对象是否相等"}},[t._v("#")]),t._v(" 3. boolean equals(Object obj)                判断两个对象是否相等")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v('一般需要重写，源码中是直接用"=="来比较对象，只能比较两个对象的内存地址是否相同')])]),t._v(" "),n("p",[n("strong",[t._v("拓展：")])]),t._v(" "),n("p",[t._v("String类型数据比较最好使用String类型的equals()方法进行比较（无需再手动重写）")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//这种写法可以直接用"=="进行比较')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这种写法只能用equals()进行比较")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ns1"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只适用于第一种初始化方法的String类型数据")]),t._v("\ns1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通用方法，建议使用")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("p",[t._v("建议使用的效率较高的equals()重写方式")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" no"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意此处必须一模一样，否则不是重写")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此处比较内存地址")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//向下转型")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("no "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("no "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])])]),t._v(" "),n("h4",{attrs:{id:"_4-string-tostring-将对象转换为字符串形式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-string-tostring-将对象转换为字符串形式"}},[t._v("#")]),t._v(" 4. String toString()                                    将对象转换为字符串形式")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("一般该方法需要重写，直接输出对象时会自动调用")])])]),t._v(" "),n("h4",{attrs:{id:"_5-protected-void-finalize-垃圾回收器负责调用的方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-protected-void-finalize-垃圾回收器负责调用的方法"}},[t._v("#")]),t._v(" 5. protected void finalize()                      垃圾回收器负责调用的方法")]),t._v(" "),n("blockquote",[n("ul",[n("li",[t._v("该方法没有方法体，只有一个{}")]),t._v(" "),n("li",[t._v("当一个对象即将被垃圾回收器GC回收时，会自动调用finalize()方法")]),t._v(" "),n("li",[t._v("如果想要在对象被回收前执行一些代码，就需要重写该方法（类似于静态代码块）")]),t._v(" "),n("li",[t._v("GC只有当垃圾够多时/需要启动时才会启动，用System.gc()方法也只能提高启动的概率")])])]),t._v(" "),n("h2",{attrs:{id:"六、内部类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六、内部类"}},[t._v("#")]),t._v(" 六、内部类")]),t._v(" "),n("h4",{attrs:{id:"静态内部类-类似于静态变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#静态内部类-类似于静态变量"}},[t._v("#")]),t._v(" 静态内部类：类似于静态变量")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明一个静态内部类")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InnerClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1、静态方法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("m1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2、实例方法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1、调用静态内部类的静态方法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("InnerClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("m1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2、调用静态内部类的实例方法")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建静态内部类对象")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("InnerClass")]),t._v(" mi "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyClass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("InnerClass")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调用方法")]),t._v("\n        mi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("m2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br")])]),n("h4",{attrs:{id:"实例内部类-类似于实例变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实例内部类-类似于实例变量"}},[t._v("#")]),t._v(" 实例内部类：类似于实例变量")]),t._v(" "),n("h4",{attrs:{id:"局部内部类-类似于局部变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#局部内部类-类似于局部变量"}},[t._v("#")]),t._v(" 局部内部类：类似于局部变量")]),t._v(" "),n("h3",{attrs:{id:"匿名内部类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#匿名内部类"}},[t._v("#")]),t._v(" 匿名内部类：")]),t._v(" "),n("blockquote",[n("h5",{attrs:{id:"不使用匿名内部类的写法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不使用匿名内部类的写法"}},[t._v("#")]),t._v(" 不使用匿名内部类的写法")])]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyMath")]),t._v(" mm "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyMath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        mm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mySum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("computeImpl")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//由于接口不能直接new，所以需要编写接口实现类并new一个（多态）")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义接口")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" compute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//区别：需要写实现类（实现接口）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" computeImpl "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" compute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调用接口")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyMath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mySum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("compute c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br")])]),n("blockquote",[n("h5",{attrs:{id:"使用匿名内部类的写法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用匿名内部类的写法"}},[t._v("#")]),t._v(" 使用匿名内部类的写法")])]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyMath")]),t._v(" mm "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyMath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        mm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mySum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//由于没有实现接口的类，所以使用匿名内部类")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//即mm.mySum(new compute(){方法实现},100,200);")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义接口")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" compute"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调用接口")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyMath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mySum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("compute c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br")])]),n("blockquote",[n("p",[n("strong",[t._v("注意")]),t._v("：匿名内部类尽量不用")]),t._v(" "),n("p",[t._v("缺点一：太复杂、太乱、可读性差")]),t._v(" "),n("p",[t._v("缺点二：类没有名字，没法重复使用")])])])}),[],!1,null,null,null);s.default=e.exports}}]);