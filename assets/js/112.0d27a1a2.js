(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{1756:function(t,a,s){"use strict";s.r(a);var r=s(1),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"stringbuffer与stringbuilder"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stringbuffer与stringbuilder"}},[t._v("#")]),t._v(" StringBuffer与StringBuilder")]),t._v(" "),s("h2",{attrs:{id:"一、引言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、引言"}},[t._v("#")]),t._v(" 一、引言")]),t._v(" "),s("blockquote",[s("h4",{attrs:{id:"由于java中字符串是不可变的常量-存储在方法区的字符串常量池中。如果频繁进行字符串拼接-每一次都会产生新的字符串-造成大量的方法区内存空间浪费"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#由于java中字符串是不可变的常量-存储在方法区的字符串常量池中。如果频繁进行字符串拼接-每一次都会产生新的字符串-造成大量的方法区内存空间浪费"}},[t._v("#")]),t._v(" 由于java中字符串是不可变的常量，存储在方法区的字符串常量池中。如果频繁进行字符串拼接，每一次都会产生新的字符串，造成大量的方法区内存空间浪费")])]),t._v(" "),s("p",[t._v('如果以后需要进行大量的字符串拼接，建议不要用"+"，而是用JDK中自带的：')]),t._v(" "),s("p",[s("code",[t._v("java.lang.StringBuffer")])]),t._v(" "),s("p",[s("code",[t._v("java.lang.StringBuilder")])]),t._v(" "),s("h2",{attrs:{id:"二、常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、常用方法"}},[t._v("#")]),t._v(" 二、常用方法")]),t._v(" "),s("h3",{attrs:{id:"_1、创建一个字符串缓冲区对象-默认初始化容量为16的byte-数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、创建一个字符串缓冲区对象-默认初始化容量为16的byte-数组"}},[t._v("#")]),t._v(" 1、创建一个字符串缓冲区对象（默认初始化容量为16的byte[]数组）")]),t._v(" "),s("blockquote",[s("p",[t._v("append()方法在追加字符串时，如果byte数组满了会自动进行扩容（数组拷贝）")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" strbuf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2、append-拼接字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、append-拼接字符串"}},[t._v("#")]),t._v(" 2、append()\t：拼接字符串")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("strbuf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstrbuf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstrbuf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100L")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[t._v("StringBuffer字符串可改变原因：")]),t._v(" "),s("ul",[s("li",[t._v("String类底层中的byte[]数组是用final修饰的（注意：在java8及以前是char[]数组）,且数组一旦创建，长度不可改变")]),t._v(" "),s("li",[t._v("StringBuffer类底层中的byte[]数组没有被final修饰，所以可以指向新的字符串（拷贝扩容String.arraycopy()），同时在初始化时可以指定数组长度")])])]),t._v(" "),s("h2",{attrs:{id:"三、优化stringbuffer性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、优化stringbuffer性能"}},[t._v("#")]),t._v(" 三、优化StringBuffer性能")]),t._v(" "),s("p",[t._v("在创建StringBuffer对象时，尽可能预估一下大小，给定一个大一些的初始化容量，以减少扩容的次数")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" strbuf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//给定初始容量为100")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"四、stringbuffer与stringbuilder的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、stringbuffer与stringbuilder的区别"}},[t._v("#")]),t._v(" 四、StringBuffer与StringBuilder的区别")]),t._v(" "),s("p",[s("strong",[t._v("StringBuffer")]),t._v("中的方法：都"),s("strong",[t._v("有")]),t._v("关键字synchronized修饰，表示StringBuffer在多线程环境下运行是"),s("strong",[t._v("安全")]),t._v("的")]),t._v(" "),s("p",[s("strong",[t._v("StringBuilder")]),t._v("中的方法：都"),s("strong",[t._v("没有")]),t._v("关键字synchronized修饰，表示StringBuilder在多线程环境下运行是"),s("strong",[t._v("不安全")]),t._v("的")])])}),[],!1,null,null,null);a.default=n.exports}}]);